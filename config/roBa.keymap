#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <1>;

    scroll-layers = <4>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        Fn2 {
            bindings = <&kp F2>;
            key-positions = <1 2>;
        };

        Fn5 {
            bindings = <&kp F5>;
            key-positions = <3 4>;
        };

        Left_Click {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        Right_Click {
            bindings = <&mkp MB2>;
            key-positions = <20 19>;
        };

        comboDELL {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
        };

        comboHOME {
            bindings = <&kp HOME>;
            key-positions = <20 21>;
        };

        comboEND {
            bindings = <&kp END>;
            key-positions = <32 33>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        tkp1: tkp1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(T) &kp R &kp N5 &kp N3 &kp LS(D) &kp EXCL &kp G &kp J &kp O>;
            label = "TKP1";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R                 &kp T                                                           &kp Y        &kp U  &kp I  &kp O      &kp P
&kp A           &kp S         &kp D         &kp F                 &kp G      &lt 1 ESC                   &kp LANGUAGE_1           &kp H        &kp J  &kp K  &kp L      &kp MINUS
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C                 &kp V      &kp B                       &mt LEFT_ALT LANGUAGE_2  &kp B        &kp N  &kp M  &kp COMMA  &kp PERIOD
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT GRAVE  &lt 2 TAB  &lt_to_layer_0 4 SPACE      &kp BACKSPACE            &lt 3 ENTER                           &lt 4 SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5                      &kp F6  &kp F7  &kp F8  &kp F9   &kp F10
&none   &none   &none   &none   &none   &none       &none   &none   &none   &none   &kp F11  &kp F12
&none   &none   &none   &none   &none   &none       &none   &none   &none   &none   &none    &none
&none   &none   &none   &trans  &trans  &trans      &trans  &trans                           &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp ESC           &kp CARET        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH                                             &none     &none           &none           &none            &mkp MB4
&kp TILDE         &kp EXCLAMATION  &kp CARET         &kp ASTRK          &kp LEFT_PARENTHESIS  &kp SEMICOLON         &kp LS(HOME)  &kp HOME  &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB5
&kp LEFT_SHIFT    &kp AMPS         &kp AT            &kp RIGHT_BRACE    &kp PIPE              &kp SINGLE_QUOTE      &kp LS(END)   &kp END   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&kp LEFT_CONTROL  &kp BACKSLASH    &kp HASH          &kp LEFT_BRACE     &to 0                 &to 4                 &mkp MB4      &mkp MB5                                                   &kp UNDERSCORE
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        ARROW {
            bindings = <
&none             &none         &none  &none           &none                                            &none      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2     &mkp MB4
&none             &none         &none  &none           &none             &none               &none      &kp HOME   &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB5
&kp LEFT_SHIFT    &none         &none  &none           &none             &none               &none      &kp END    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LA(F4)
&kp LEFT_CONTROL  &kp LEFT_GUI  &tkp1  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_SHIFT      &kp LG(L)  &kp ENTER                                                   &kp UNDERSCORE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Num {
            bindings = <
&kp ESC           &kp PERCENT           &kp LC(LG(LEFT_ARROW))  &kp LG(TAB)         &kp LC(LG(RIGHT_ARROW))                                  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS   &kp EQUAL
&kp TILDE         &kp COLON             &kp LG(LEFT_ARROW)      &kp LG(UP_ARROW)    &kp LG(RIGHT_ARROW)      &kp K_CALC      &kp COLON       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS    &kp SLASH
&kp LEFT_SHIFT    &kp DOLLAR            &trans                  &kp LG(DOWN_ARROW)  &trans                   &trans          &kp LANGUAGE_2  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD  &kp ASTERISK
&kp LEFT_CONTROL  &kp NON_US_BACKSLASH  &trans                  &trans              &trans                   &trans          &kp BACKSPACE   &kp KP_NUMBER_0                                                &kp COMMA
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
