#include <behaviors/rgbled_widget.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <1>;

    scroll-layers = <8>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        Fn2 {
            bindings = <&kp F2>;
            key-positions = <1 2>;
        };

        Fn5 {
            bindings = <&kp F5>;
            key-positions = <3 4>;
        };

        Left_Click {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        Right_Click {
            bindings = <&mkp MB2>;
            key-positions = <20 19>;
        };

        comboDELL {
            bindings = <&kp DEL>;
            key-positions = <8 9>;
        };

        comboHOME {
            bindings = <&kp HOME>;
            key-positions = <20 21>;
        };

        comboEND {
            bindings = <&kp END>;
            key-positions = <32 33>;
        };

        comboINS {
            bindings = <&kp INS>;
            key-positions = <7 8>;
        };

        ctrlQ {
            bindings = <&kp LC(Q)>;
            key-positions = <6 7>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        tkp1: tkp1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp R &kp N5 &kp N3 &kp LS(D) &kp EXCL &kp G &kp J &kp O>;
            label = "TKP1";
        };

        window_close: window_close {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_wait_time 200>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_wait_time 200>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "WINDOW_CLOSE";
        };

        bt_select_0: bt_select_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog_off 1>, <&macro_wait_time 200>, <&bt BT_SEL 0>;

            label = "BT_SELECT_0";
        };

        bt_select_1: bt_select_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&tog_off 1>, <&macro_wait_time 200>, <&bt BT_SEL 1>;

            label = "BT_SELECT_1";
        };

        bt_select_2: bt_select_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2>, <&macro_wait_time 500>, <&tog_on 1>;

            label = "BT_SELECT_2";
        };

        ScrollLayer_win: ScrollLayer_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_on 6>,
                <&macro_wait_time 100>,
                <&tog_on 8>,
                <&macro_pause_for_release>,
                <&tog_off 6>,
                <&macro_wait_time 100>,
                <&tog_off 8>;

            label = "SCROLLLAYER_WIN";
        };

        ScrollLayer_iOS: ScrollLayer_iOS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog_on 7>,
                <&macro_wait_time 100>,
                <&tog_on 8>,
                <&macro_pause_for_release>,
                <&tog_off 7>,
                <&macro_wait_time 100>,
                <&tog_off 8>;

            label = "SCROLLLAYER_IOS";
        };

        iOS_FullScreen: iOS_FullScreen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp F>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "IOS_FULLSCREEN";
        };

        iOS_Minimize: iOS_Minimize {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp M>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "IOS_MINIMIZE";
        };

        iOS_Split_Left: iOS_Split_Left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp GLOBE>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LCTRL &kp GLOBE>;

            label = "IOS_SPLIT_LEFT";
        };

        iOS_Split_Right: iOS_Split_Right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp GLOBE>,
                <&macro_tap>,
                <&kp RIGHT_ARROW>,
                <&macro_release>,
                <&kp LCTRL &kp GLOBE>;

            label = "IOS_SPLIT_RIGHT";
        };

        iOS_Split_Up: iOS_Split_Up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp GLOBE>,
                <&macro_tap>,
                <&kp UP_ARROW>,
                <&macro_release>,
                <&kp LCTRL &kp GLOBE>;

            label = "IOS_SPLIT_UP";
        };

        iOS_Split_Down: iOS_Split_Down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp GLOBE>,
                <&macro_tap>,
                <&kp DOWN_ARROW>,
                <&macro_release>,
                <&kp LCTRL &kp GLOBE>;

            label = "IOS_SPLIT_DOWN";
        };

        iOS_Show_AllWindow: iOS_Show_AllWindow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp GLOBE>,
                <&macro_tap>,
                <&kp UP_ARROW>,
                <&macro_release>,
                <&kp GLOBE>;

            label = "IOS_SHOW_ALLWINDOW";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };

        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        lt_ScrollLayer_win: lt_ScrollLayer_win {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SCROLLLAYER_WIN";
            bindings = <&ScrollLayer_win>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        lt_ScrollLayer_iOS: lt_ScrollLayer_iOS {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SCROLLLAYER_IOS";
            bindings = <&ScrollLayer_iOS>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        a_tab: a_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "A_TAB";
            bindings = <&kp A>, <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LALT)>;
            keep-mods = <(MOD_LALT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R                 &kp T                                                                &kp Y        &kp U  &kp I  &kp O      &kp P
&a_tab          &kp S         &kp D         &kp F                 &kp G      &lt 2 RIGHT_ARROW                &lt 2 LANG1              &kp H        &kp J  &kp K  &kp L      &kp MINUS
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C                 &kp V      &kp LEFT_ARROW                   &mt LEFT_ALT LANGUAGE_2  &kp B        &kp N  &kp M  &kp COMMA  &kp PERIOD
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT GRAVE  &lt 3 TAB  &lt_ScrollLayer_win 0 SPACE      &kp BACKSPACE            &lt 5 ENTER                           &lt_ScrollLayer_win 0 SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        iOS_default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R      &kp T                                                                &kp Y        &kp U  &kp I  &kp O      &kp P
&kp A           &kp S         &kp D         &kp F      &kp G      &kp RIGHT_ARROW                  &lt 2 LANG1              &kp H        &kp J  &kp K  &kp L      &kp MINUS
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C      &kp V      &kp LEFT_ARROW                   &mt LEFT_ALT LANGUAGE_2  &kp B        &kp N  &kp M  &kp COMMA  &kp PERIOD
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &kp GLOBE  &lt 4 TAB  &lt_ScrollLayer_iOS 0 SPACE      &kp BACKSPACE            &lt 5 ENTER                           &lt_ScrollLayer_iOS 0 SLASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        win_FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4   &kp F5                           &kp F1  &kp F2  &kp F3  &kp F4   &kp F5
&kp F6  &kp F7  &kp F8        &kp F9   &kp F10  &none         &none     &kp F6  &kp F7  &kp F8  &kp F9   &kp F10
&none   &none   &none         &kp F11  &kp F12  &ind_bat      &ind_bat  &none   &none   &none   &kp F11  &kp F12
&none   &none   &kp LEFT_ALT  &none    &none    &none         &none     &none                            &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        win_SYMBOL {
            bindings = <
&kp QUESTION      &kp JP_CARET     &kp JP_AT         &kp JP_LBRACKET   &kp JP_RBRACKET                                   &kp JP_PIPE  &none           &none           &none            &mkp MB4
&kp JP_TILDE      &kp EXCLAMATION  &kp JP_AMPERSAND  &kp JP_LPAREN     &kp JP_RPAREN    &kp SEMICOLON      &kp LS(HOME)  &kp HOME     &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB5
&kp LEFT_SHIFT    &kp JP_QUOTE     &kp JP_DQUOTE     &kp JP_LBRACE     &kp JP_RBRACE    &kp JP_COLON       &kp LS(END)   &kp END      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&kp LEFT_CONTROL  &kp JP_YEN       &kp HASH          &kp JP_BACKQUOTE  &to 0            &mo 7              &mkp MB4      &mkp MB5                                                      &kp JP_UNDERSCORE
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        iOS_SYMBOL {
            bindings = <
&kp QUESTION      &kp CARET        &kp AT_SIGN        &kp LEFT_BRACKET      &kp RBKT                                                        &kp PIPE               &none           &none           &none            &kp LG(LEFT_BRACKET)
&kp TILDE         &kp EXCLAMATION  &kp AMPERSAND      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON      &kp LS(HOME)          &kp HOME               &mkp MB1        &kp UP_ARROW    &mkp MB2         &kp LG(RIGHT_BRACKET)
&kp LEFT_SHIFT    &kp SQT          &kp DOUBLE_QUOTES  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp COLON          &kp LS(END)           &kp END                &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none
&kp LEFT_CONTROL  &kp BSLH         &kp HASH           &kp GRAVE             &to 0                  &mo 7              &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)                                                   &kp UNDERSCORE
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        ARROW {
            bindings = <
&kp LC(LG(Q))     &none         &none  &none           &none                                                 &bt_select_0  &bt_select_1    &bt_select_2    &out OUT_TOG     &mkp MB4
&none             &none         &none  &none           &none             &kp INT_HENKAN        &kp LS(HOME)  &kp HOME      &mkp MB1        &kp UP_ARROW    &mkp MB2         &mkp MB5
&kp LEFT_SHIFT    &none         &none  &none           &none             &kp INT_MUHENKAN      &kp LS(END)   &kp END       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &window_close
&kp LEFT_CONTROL  &kp LEFT_GUI  &tkp1  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_SHIFT        &kp LG(L)     &kp ENTER                                                      &kp JP_UNDERSCORE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        Num {
            bindings = <
&kp ESC           &kp PERCENT   &kp LC(LG(LEFT_ARROW))  &kp LG(TAB)         &kp LC(LG(RIGHT_ARROW))                                    &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS    &kp JP_EQUAL
&kp JP_TILDE      &kp JP_COLON  &kp LG(LEFT_ARROW)      &kp LG(UP_ARROW)    &kp LG(RIGHT_ARROW)      &kp C_AL_CALC      &kp COLON      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp JP_PLUS  &kp SLASH
&kp LEFT_SHIFT    &kp DOLLAR    &none                   &kp LG(DOWN_ARROW)  &none                    &kp LS(LG(S))      &kp JP_TILDE   &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD   &kp JP_ASTERISK
&kp LEFT_CONTROL  &kp JP_YEN    &kp COMMA               &trans              &kp LS(LG(S))            &trans             &kp BACKSPACE  &kp KP_NUMBER_0                                                 &kp COMMA
            >;
        };

        iOS_Num {
            bindings = <
&kp ESC           &kp PERCENT           &kp LG(LEFT_ARROW)  &iOS_Show_AllWindow   &kp LG(RIGHT_ARROW)                                     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS   &kp EQUAL
&kp TILDE         &kp COLON             &iOS_Split_Left     &iOS_Split_Up         &iOS_Split_Right      &kp LA(LG(D))      &kp COLON      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS    &kp SLASH
&kp LEFT_SHIFT    &kp DOLLAR            &iOS_Minimize       &iOS_Split_Down       &iOS_FullScreen       &kp LG(H)          &kp TILDE      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD  &kp ASTERISK
&kp LEFT_CONTROL  &kp NON_US_BACKSLASH  &kp COMMA           &kp LS(LG(NUMBER_4))  &kp LS(LG(NUMBER_3))  &trans             &kp BACKSPACE  &kp KP_NUMBER_0                                                &kp COMMA
            >;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
